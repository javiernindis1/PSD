Traceback (most recent call last):
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/python/3.12.1/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt

fig, axes = plt.subplots(1, 2, figsize=(12, 5))

# Plot 1: Bar chart jumlah species
df['species'].value_counts().plot(
    kind='bar',
    ax=axes[0],
    title='Jumlah Data per Species'
)

# Plot 2: Scatter plot sepal_length vs sepal_width
df.plot.scatter(
    x='sepal_length',
    y='sepal_width',
    c='petal_length',
    cmap='viridis',
    s=50,
    alpha=0.7,
    title='Scatter Plot Sepal Length vs Sepal Width',
    ax=axes[1]
)

plt.tight_layout()
plt.show()
------------------


[31m---------------------------------------------------------------------------[39m
[31mNameError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 6[39m
[32m      3[39m fig, axes = plt.subplots([32m1[39m, [32m2[39m, figsize=([32m12[39m, [32m5[39m))
[32m      5[39m [38;5;66;03m# Plot 1: Bar chart jumlah species[39;00m
[32m----> [39m[32m6[39m [43mdf[49m[[33m'[39m[33mspecies[39m[33m'[39m].value_counts().plot(
[32m      7[39m     kind=[33m'[39m[33mbar[39m[33m'[39m,
[32m      8[39m     ax=axes[[32m0[39m],
[32m      9[39m     title=[33m'[39m[33mJumlah Data per Species[39m[33m'[39m
[32m     10[39m )
[32m     12[39m [38;5;66;03m# Plot 2: Scatter plot sepal_length vs sepal_width[39;00m
[32m     13[39m df.plot.scatter(
[32m     14[39m     x=[33m'[39m[33msepal_length[39m[33m'[39m,
[32m     15[39m     y=[33m'[39m[33msepal_width[39m[33m'[39m,
[32m   (...)[39m[32m     21[39m     ax=axes[[32m1[39m]
[32m     22[39m )

[31mNameError[39m: name 'df' is not defined

